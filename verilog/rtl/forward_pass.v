// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="forward_pass,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7vx485t-ffg1157-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.692150,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=1,HLS_SYN_FF=1288,HLS_SYN_LUT=3965,HLS_VERSION=2019_1}" *)

module forward_pass (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        image_r_Addr_A,
        image_r_EN_A,
        image_r_WEN_A,
        image_r_Din_A,
        image_r_Dout_A,
        image_r_Clk_A,
        image_r_Rst_A,
        ap_return
);

parameter    ap_ST_fsm_state1 = 64'd1;
parameter    ap_ST_fsm_state2 = 64'd2;
parameter    ap_ST_fsm_state3 = 64'd4;
parameter    ap_ST_fsm_state4 = 64'd8;
parameter    ap_ST_fsm_state5 = 64'd16;
parameter    ap_ST_fsm_state6 = 64'd32;
parameter    ap_ST_fsm_state7 = 64'd64;
parameter    ap_ST_fsm_state8 = 64'd128;
parameter    ap_ST_fsm_state9 = 64'd256;
parameter    ap_ST_fsm_state10 = 64'd512;
parameter    ap_ST_fsm_state11 = 64'd1024;
parameter    ap_ST_fsm_state12 = 64'd2048;
parameter    ap_ST_fsm_state13 = 64'd4096;
parameter    ap_ST_fsm_state14 = 64'd8192;
parameter    ap_ST_fsm_state15 = 64'd16384;
parameter    ap_ST_fsm_state16 = 64'd32768;
parameter    ap_ST_fsm_state17 = 64'd65536;
parameter    ap_ST_fsm_state18 = 64'd131072;
parameter    ap_ST_fsm_state19 = 64'd262144;
parameter    ap_ST_fsm_state20 = 64'd524288;
parameter    ap_ST_fsm_state21 = 64'd1048576;
parameter    ap_ST_fsm_state22 = 64'd2097152;
parameter    ap_ST_fsm_state23 = 64'd4194304;
parameter    ap_ST_fsm_state24 = 64'd8388608;
parameter    ap_ST_fsm_state25 = 64'd16777216;
parameter    ap_ST_fsm_state26 = 64'd33554432;
parameter    ap_ST_fsm_state27 = 64'd67108864;
parameter    ap_ST_fsm_state28 = 64'd134217728;
parameter    ap_ST_fsm_state29 = 64'd268435456;
parameter    ap_ST_fsm_state30 = 64'd536870912;
parameter    ap_ST_fsm_state31 = 64'd1073741824;
parameter    ap_ST_fsm_state32 = 64'd2147483648;
parameter    ap_ST_fsm_state33 = 64'd4294967296;
parameter    ap_ST_fsm_state34 = 64'd8589934592;
parameter    ap_ST_fsm_state35 = 64'd17179869184;
parameter    ap_ST_fsm_state36 = 64'd34359738368;
parameter    ap_ST_fsm_state37 = 64'd68719476736;
parameter    ap_ST_fsm_state38 = 64'd137438953472;
parameter    ap_ST_fsm_state39 = 64'd274877906944;
parameter    ap_ST_fsm_state40 = 64'd549755813888;
parameter    ap_ST_fsm_state41 = 64'd1099511627776;
parameter    ap_ST_fsm_state42 = 64'd2199023255552;
parameter    ap_ST_fsm_state43 = 64'd4398046511104;
parameter    ap_ST_fsm_state44 = 64'd8796093022208;
parameter    ap_ST_fsm_state45 = 64'd17592186044416;
parameter    ap_ST_fsm_state46 = 64'd35184372088832;
parameter    ap_ST_fsm_state47 = 64'd70368744177664;
parameter    ap_ST_fsm_state48 = 64'd140737488355328;
parameter    ap_ST_fsm_state49 = 64'd281474976710656;
parameter    ap_ST_fsm_state50 = 64'd562949953421312;
parameter    ap_ST_fsm_state51 = 64'd1125899906842624;
parameter    ap_ST_fsm_state52 = 64'd2251799813685248;
parameter    ap_ST_fsm_state53 = 64'd4503599627370496;
parameter    ap_ST_fsm_state54 = 64'd9007199254740992;
parameter    ap_ST_fsm_state55 = 64'd18014398509481984;
parameter    ap_ST_fsm_state56 = 64'd36028797018963968;
parameter    ap_ST_fsm_state57 = 64'd72057594037927936;
parameter    ap_ST_fsm_state58 = 64'd144115188075855872;
parameter    ap_ST_fsm_state59 = 64'd288230376151711744;
parameter    ap_ST_fsm_state60 = 64'd576460752303423488;
parameter    ap_ST_fsm_state61 = 64'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 64'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 64'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 64'd9223372036854775808;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] image_r_Addr_A;
output   image_r_EN_A;
output  [1:0] image_r_WEN_A;
output  [15:0] image_r_Din_A;
input  [15:0] image_r_Dout_A;
output   image_r_Clk_A;
output   image_r_Rst_A;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg image_r_EN_A;

(* fsm_encoding = "none" *) reg   [63:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] weights_conv1_address0;
reg    weights_conv1_ce0;
wire   [15:0] weights_conv1_q0;
wire   [8:0] weights_conv2_address0;
reg    weights_conv2_ce0;
wire   [15:0] weights_conv2_q0;
wire   [2:0] biases_conv2_address0;
reg    biases_conv2_ce0;
wire   [15:0] biases_conv2_q0;
wire   [8:0] weights_dense2_address0;
reg    weights_dense2_ce0;
wire   [15:0] weights_dense2_q0;
wire   [3:0] biases_dense2_address0;
reg    biases_dense2_ce0;
wire   [15:0] biases_dense2_q0;
wire   [15:0] grp_multiply_custom_floa_fu_968_ap_return;
reg   [15:0] reg_983;
wire    ap_CS_fsm_state12;
wire    grp_multiply_custom_floa_fu_968_ap_ready;
wire    grp_multiply_custom_floa_fu_968_ap_done;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state58;
wire   [15:0] conv1_q0;
reg   [15:0] reg_988;
wire    ap_CS_fsm_state14;
wire   [15:0] conv2_q0;
reg   [15:0] reg_993;
wire    ap_CS_fsm_state38;
wire   [9:0] add_ln32_4_fu_998_p2;
reg   [9:0] add_ln32_4_reg_2781;
wire    ap_CS_fsm_state2;
wire   [4:0] add_ln32_fu_1004_p2;
reg   [4:0] add_ln32_reg_2786;
wire   [4:0] add_ln32_1_fu_1010_p2;
reg   [4:0] add_ln32_1_reg_2791;
wire    ap_CS_fsm_state3;
wire   [9:0] add_ln32_3_fu_1020_p2;
reg   [9:0] add_ln32_3_reg_2796;
wire   [1:0] add_ln32_2_fu_1026_p2;
wire    ap_CS_fsm_state4;
wire   [9:0] add_ln37_fu_1062_p2;
reg   [9:0] add_ln37_reg_2815;
wire    ap_CS_fsm_state5;
wire   [4:0] i_fu_1074_p2;
reg   [4:0] i_reg_2823;
wire   [4:0] j_fu_1086_p2;
reg   [4:0] j_reg_2831;
wire    ap_CS_fsm_state6;
wire   [12:0] zext_ln39_fu_1110_p1;
reg   [12:0] zext_ln39_reg_2836;
wire   [0:0] icmp_ln38_fu_1080_p2;
wire   [7:0] zext_ln39_1_fu_1114_p1;
reg   [7:0] zext_ln39_1_reg_2841;
wire    ap_CS_fsm_state7;
wire   [2:0] k_fu_1124_p2;
reg   [2:0] k_reg_2849;
reg   [11:0] conv1_addr_1_reg_2854;
wire   [0:0] icmp_ln39_fu_1118_p2;
wire   [1:0] di_fu_1154_p2;
reg   [1:0] di_reg_2862;
wire    ap_CS_fsm_state8;
wire   [10:0] sub_ln45_fu_1190_p2;
reg   [10:0] sub_ln45_reg_2867;
wire   [0:0] icmp_ln43_fu_1148_p2;
wire   [4:0] sub_ln45_1_fu_1208_p2;
reg   [4:0] sub_ln45_1_reg_2872;
wire   [1:0] trunc_ln48_fu_1214_p1;
reg   [1:0] trunc_ln48_reg_2877;
wire   [1:0] dj_fu_1228_p2;
reg   [1:0] dj_reg_2885;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln44_fu_1222_p2;
reg   [15:0] image_load_reg_2900;
wire    ap_CS_fsm_state10;
reg   [15:0] weights_conv1_load_reg_2905;
wire   [15:0] merge_i_fu_1289_p6;
reg   [15:0] merge_i_reg_2910;
wire   [2:0] add_ln55_fu_1320_p2;
reg   [2:0] add_ln55_reg_2915;
wire    ap_CS_fsm_state16;
wire  signed [36:0] sext_ln55_fu_1356_p1;
reg  signed [36:0] sext_ln55_reg_2920;
wire   [2:0] add_ln55_1_fu_1360_p2;
reg   [2:0] add_ln55_1_reg_2925;
wire    ap_CS_fsm_state17;
wire   [36:0] add_ln55_3_fu_1370_p2;
reg   [36:0] add_ln55_3_reg_2930;
wire   [1:0] add_ln55_2_fu_1375_p2;
wire    ap_CS_fsm_state18;
wire   [2:0] i_1_fu_1417_p2;
reg   [2:0] i_1_reg_2952;
wire    ap_CS_fsm_state19;
wire   [6:0] sub_ln59_fu_1447_p2;
reg   [6:0] sub_ln59_reg_2957;
wire   [0:0] icmp_ln56_fu_1411_p2;
wire   [4:0] shl_ln1_fu_1453_p3;
reg   [4:0] shl_ln1_reg_2962;
wire   [2:0] j_1_fu_1467_p2;
reg   [2:0] j_1_reg_2970;
wire    ap_CS_fsm_state20;
wire   [8:0] tmp_17_cast_fu_1482_p3;
reg   [8:0] tmp_17_cast_reg_2975;
wire   [0:0] icmp_ln57_fu_1461_p2;
wire   [4:0] shl_ln62_1_fu_1490_p3;
reg   [4:0] shl_ln62_1_reg_2980;
wire   [2:0] k_1_fu_1504_p2;
reg   [2:0] k_1_reg_2988;
wire    ap_CS_fsm_state21;
wire   [12:0] zext_ln59_3_fu_1510_p1;
reg   [12:0] zext_ln59_3_reg_2993;
wire   [0:0] icmp_ln58_fu_1498_p2;
reg   [7:0] maxpool1_addr_1_reg_2998;
wire   [2:0] di_1_fu_1538_p2;
reg   [2:0] di_1_reg_3006;
wire    ap_CS_fsm_state22;
wire   [9:0] mul_ln62_fu_1553_p2;
reg   [9:0] mul_ln62_reg_3011;
wire   [0:0] icmp_ln60_fu_1532_p2;
wire   [2:0] dj_1_fu_1569_p2;
reg   [2:0] dj_1_reg_3019;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln61_fu_1563_p2;
wire   [1:0] add_ln67_fu_1732_p2;
reg   [1:0] add_ln67_reg_3029;
wire    ap_CS_fsm_state25;
wire   [1:0] add_ln67_1_fu_1738_p2;
reg   [1:0] add_ln67_1_reg_3034;
wire    ap_CS_fsm_state26;
wire   [2:0] add_ln67_2_fu_1744_p2;
wire    ap_CS_fsm_state27;
wire   [2:0] i_2_fu_1789_p2;
reg   [2:0] i_2_reg_3056;
wire    ap_CS_fsm_state28;
wire   [5:0] zext_ln69_fu_1803_p1;
reg   [5:0] zext_ln69_reg_3061;
wire   [0:0] icmp_ln68_fu_1783_p2;
wire   [2:0] j_2_fu_1813_p2;
reg   [2:0] j_2_reg_3069;
wire    ap_CS_fsm_state29;
wire   [8:0] tmp_23_cast_fu_1828_p3;
reg   [8:0] tmp_23_cast_reg_3074;
wire   [0:0] icmp_ln69_fu_1807_p2;
wire   [31:0] zext_ln70_fu_1836_p1;
reg   [31:0] zext_ln70_reg_3079;
wire    ap_CS_fsm_state30;
wire   [3:0] k_2_fu_1846_p2;
reg   [3:0] k_2_reg_3087;
wire   [63:0] zext_ln71_1_fu_1852_p1;
reg   [63:0] zext_ln71_1_reg_3092;
wire   [0:0] icmp_ln70_fu_1840_p2;
reg   [6:0] conv2_addr_1_reg_3097;
wire   [1:0] di_2_fu_1884_p2;
reg   [1:0] di_2_reg_3105;
wire    ap_CS_fsm_state31;
wire   [6:0] sub_ln75_1_fu_1920_p2;
reg   [6:0] sub_ln75_1_reg_3110;
wire   [0:0] icmp_ln72_fu_1878_p2;
wire   [4:0] sub_ln75_fu_1938_p2;
reg   [4:0] sub_ln75_reg_3115;
wire   [1:0] dj_2_fu_1954_p2;
reg   [1:0] dj_2_reg_3128;
wire    ap_CS_fsm_state32;
wire   [8:0] tmp_30_cast_fu_1975_p3;
reg   [8:0] tmp_30_cast_reg_3133;
wire   [0:0] icmp_ln73_fu_1948_p2;
wire  signed [7:0] sext_ln74_fu_2000_p1;
reg  signed [7:0] sext_ln74_reg_3138;
wire   [2:0] dk_fu_2010_p2;
reg   [2:0] dk_reg_3146;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln74_fu_2004_p2;
wire   [15:0] maxpool1_q0;
reg   [15:0] maxpool1_load_reg_3161;
wire    ap_CS_fsm_state34;
reg   [15:0] weights_conv2_load_reg_3166;
reg   [15:0] biases_conv2_load_reg_3171;
wire   [0:0] xor_ln83_1_fu_2078_p2;
reg   [0:0] xor_ln83_1_reg_3176;
wire    ap_CS_fsm_state40;
wire   [0:0] xor_ln83_fu_2084_p2;
reg   [0:0] xor_ln83_reg_3181;
wire    ap_CS_fsm_state41;
wire   [2:0] add_ln83_fu_2090_p2;
wire    ap_CS_fsm_state42;
wire   [1:0] i_3_fu_2123_p2;
reg   [1:0] i_3_reg_3197;
wire    ap_CS_fsm_state43;
wire   [3:0] zext_ln90_fu_2137_p1;
reg   [3:0] zext_ln90_reg_3202;
wire   [0:0] icmp_ln84_fu_2117_p2;
wire   [1:0] shl_ln90_fu_2141_p2;
reg   [1:0] shl_ln90_reg_3207;
wire   [1:0] j_3_fu_2153_p2;
reg   [1:0] j_3_reg_3215;
wire    ap_CS_fsm_state44;
wire   [6:0] tmp_33_cast_fu_2168_p3;
reg   [6:0] tmp_33_cast_reg_3220;
wire   [0:0] icmp_ln85_fu_2147_p2;
wire   [1:0] shl_ln90_1_fu_2176_p2;
reg   [1:0] shl_ln90_1_reg_3225;
wire   [3:0] k_3_fu_2188_p2;
reg   [3:0] k_3_reg_3233;
wire    ap_CS_fsm_state45;
wire   [7:0] zext_ln87_1_fu_2194_p1;
reg   [7:0] zext_ln87_1_reg_3238;
wire   [0:0] icmp_ln86_fu_2182_p2;
reg   [4:0] maxpool2_addr_1_reg_3243;
wire   [1:0] di_3_fu_2218_p2;
reg   [1:0] di_3_reg_3251;
wire    ap_CS_fsm_state46;
wire   [1:0] add_ln90_fu_2224_p2;
reg   [1:0] add_ln90_reg_3256;
wire   [0:0] icmp_ln88_fu_2212_p2;
wire   [1:0] dj_3_fu_2235_p2;
reg   [1:0] dj_3_reg_3264;
wire    ap_CS_fsm_state47;
wire   [0:0] icmp_ln89_fu_2229_p2;
wire   [4:0] add_ln95_fu_2390_p2;
wire    ap_CS_fsm_state49;
wire   [1:0] i_4_fu_2413_p2;
reg   [1:0] i_4_reg_3285;
wire    ap_CS_fsm_state50;
wire   [3:0] zext_ln97_fu_2427_p1;
reg   [3:0] zext_ln97_reg_3290;
wire   [0:0] icmp_ln96_fu_2407_p2;
wire   [1:0] j_5_fu_2437_p2;
reg   [1:0] j_5_reg_3298;
wire    ap_CS_fsm_state51;
wire   [6:0] tmp_37_cast_fu_2452_p3;
reg   [6:0] tmp_37_cast_reg_3303;
wire   [0:0] icmp_ln97_fu_2431_p2;
wire   [3:0] shl_ln4_fu_2464_p3;
reg   [3:0] shl_ln4_reg_3308;
wire   [3:0] k_4_fu_2478_p2;
reg   [3:0] k_4_reg_3316;
wire    ap_CS_fsm_state52;
wire   [0:0] icmp_ln98_fu_2472_p2;
wire   [3:0] add_ln99_fu_2498_p2;
reg   [3:0] add_ln99_reg_3326;
wire   [0:0] trunc_ln99_1_fu_2503_p1;
reg   [0:0] trunc_ln99_1_reg_3331;
wire   [6:0] zext_ln105_fu_2518_p1;
reg   [6:0] zext_ln105_reg_3336;
wire    ap_CS_fsm_state54;
wire   [3:0] i_6_fu_2528_p2;
reg   [3:0] i_6_reg_3344;
wire   [63:0] zext_ln106_fu_2534_p1;
reg   [63:0] zext_ln106_reg_3349;
wire   [0:0] icmp_ln105_fu_2522_p2;
reg   [3:0] dense_addr_1_reg_3354;
wire   [5:0] j_6_fu_2545_p2;
reg   [5:0] j_6_reg_3367;
wire    ap_CS_fsm_state55;
wire   [0:0] icmp_ln107_fu_2539_p2;
wire   [15:0] flatten_q0;
reg   [15:0] flatten_load_reg_3387;
wire    ap_CS_fsm_state56;
reg   [15:0] weights_dense2_load_reg_3392;
wire   [15:0] grp_add_fu_954_ap_return;
wire    ap_CS_fsm_state59;
wire    grp_add_fu_954_ap_ready;
wire    grp_add_fu_954_ap_done;
reg   [15:0] biases_dense2_load_reg_3402;
wire    ap_CS_fsm_state60;
wire   [15:0] dense_q0;
wire    ap_CS_fsm_state62;
wire   [3:0] i_5_fu_2608_p2;
reg   [3:0] i_5_reg_3415;
wire    ap_CS_fsm_state63;
wire   [0:0] icmp_ln122_fu_2602_p2;
wire   [3:0] select_ln123_fu_2765_p3;
wire    ap_CS_fsm_state64;
wire   [15:0] select_ln123_1_fu_2773_p3;
reg   [3:0] dense_address0;
reg    dense_ce0;
reg    dense_we0;
reg   [15:0] dense_d0;
reg   [11:0] conv1_address0;
reg    conv1_ce0;
reg    conv1_we0;
reg   [15:0] conv1_d0;
reg   [7:0] maxpool1_address0;
reg    maxpool1_ce0;
reg    maxpool1_we0;
reg   [15:0] maxpool1_d0;
reg   [6:0] conv2_address0;
reg    conv2_ce0;
reg    conv2_we0;
reg   [15:0] conv2_d0;
reg   [4:0] maxpool2_address0;
reg    maxpool2_ce0;
reg    maxpool2_we0;
reg   [15:0] maxpool2_d0;
wire   [15:0] maxpool2_q0;
reg   [4:0] flatten_address0;
reg    flatten_ce0;
reg    flatten_we0;
reg   [15:0] flatten_d0;
wire    grp_add_fu_954_ap_start;
wire    grp_add_fu_954_ap_idle;
reg   [15:0] grp_add_fu_954_a;
reg   [15:0] grp_add_fu_954_b;
wire    grp_multiply_custom_floa_fu_968_ap_start;
wire    grp_multiply_custom_floa_fu_968_ap_idle;
reg   [15:0] grp_multiply_custom_floa_fu_968_a;
reg   [15:0] grp_multiply_custom_floa_fu_968_b;
reg   [4:0] phi_ln32_reg_440;
wire   [0:0] icmp_ln32_fu_1044_p2;
wire   [0:0] icmp_ln32_1_fu_1050_p2;
wire   [0:0] icmp_ln32_2_fu_1056_p2;
reg   [9:0] phi_mul_reg_452;
reg   [4:0] phi_ln32_1_reg_464;
reg   [1:0] phi_ln32_2_reg_476;
reg   [4:0] i_0_reg_487;
reg   [9:0] phi_mul6_reg_499;
reg   [4:0] j_0_reg_511;
wire   [0:0] icmp_ln37_fu_1068_p2;
reg   [2:0] k_0_reg_523;
wire    ap_CS_fsm_state15;
reg   [1:0] di_0_reg_535;
reg   [1:0] dj_0_reg_546;
wire    ap_CS_fsm_state13;
reg   [2:0] phi_ln55_reg_557;
wire   [0:0] icmp_ln55_fu_1393_p2;
wire   [0:0] icmp_ln55_1_fu_1399_p2;
wire   [0:0] icmp_ln55_2_fu_1405_p2;
reg   [2:0] phi_ln55_1_reg_569;
reg   [1:0] phi_ln55_2_reg_581;
reg   [2:0] i1_0_reg_592;
reg   [2:0] j2_0_reg_603;
reg   [2:0] k3_0_reg_614;
reg   [2:0] di4_0_reg_625;
reg   [2:0] dj5_0_reg_636;
wire    ap_CS_fsm_state24;
reg   [1:0] phi_ln67_reg_647;
wire   [0:0] icmp_ln67_fu_1765_p2;
wire   [0:0] icmp_ln67_1_fu_1771_p2;
wire   [0:0] icmp_ln67_2_fu_1777_p2;
reg   [1:0] phi_ln67_1_reg_659;
reg   [2:0] phi_ln67_2_reg_671;
reg   [2:0] i6_0_reg_682;
reg   [2:0] j7_0_reg_694;
reg   [3:0] k8_0_reg_706;
wire    ap_CS_fsm_state39;
reg   [1:0] di9_0_reg_717;
reg   [1:0] dj10_0_reg_728;
reg   [2:0] dk_0_reg_739;
wire    ap_CS_fsm_state37;
reg   [0:0] phi_ln83_reg_750;
wire   [0:0] icmp_ln83_fu_2111_p2;
reg   [0:0] phi_ln83_1_reg_762;
reg   [2:0] phi_ln83_2_reg_774;
reg   [1:0] i11_0_reg_785;
reg   [1:0] j12_0_reg_796;
reg   [3:0] k13_0_reg_807;
reg   [1:0] di14_0_reg_818;
reg   [1:0] dj15_0_reg_829;
wire    ap_CS_fsm_state48;
reg   [4:0] phi_ln95_reg_840;
wire   [0:0] icmp_ln95_fu_2401_p2;
reg   [1:0] i16_0_reg_851;
reg   [1:0] j17_0_reg_863;
reg   [3:0] k18_0_reg_874;
wire    ap_CS_fsm_state53;
reg   [3:0] i19_0_reg_885;
wire    ap_CS_fsm_state61;
reg   [15:0] dense_load_1_reg_896;
reg   [5:0] j20_0_reg_909;
reg   [3:0] agg_result_V_0_reg_920;
reg   [15:0] b_assign_reg_932;
reg   [3:0] max_index_V_reg_942;
reg    grp_add_fu_954_ap_start_reg;
reg    grp_multiply_custom_floa_fu_968_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state57;
wire   [63:0] zext_ln32_1_fu_1039_p1;
wire   [63:0] zext_ln41_2_fu_1139_p1;
wire   [63:0] zext_ln45_fu_1253_p1;
wire   [63:0] zext_ln45_2_fu_1284_p1;
wire  signed [63:0] sext_ln55_1_fu_1388_p1;
wire   [63:0] zext_ln59_5_fu_1523_p1;
wire   [63:0] zext_ln62_3_fu_1606_p1;
wire   [63:0] zext_ln67_fu_1760_p1;
wire   [63:0] zext_ln71_3_fu_1865_p1;
wire   [63:0] zext_ln75_7_fu_2025_p1;
wire   [63:0] zext_ln75_5_fu_2056_p1;
wire   [63:0] zext_ln83_fu_2106_p1;
wire   [63:0] zext_ln87_3_fu_2207_p1;
wire   [63:0] zext_ln90_2_fu_2264_p1;
wire   [63:0] zext_ln95_fu_2396_p1;
wire   [63:0] zext_ln99_2_fu_2493_p1;
wire   [63:0] zext_ln99_3_fu_2513_p1;
wire   [63:0] zext_ln108_fu_2551_p1;
wire   [63:0] zext_ln108_1_fu_2597_p1;
wire   [63:0] zext_ln123_fu_2614_p1;
wire   [15:0] zext_ln57_fu_1315_p1;
wire   [31:0] image_r_Addr_A_orig;
wire   [15:0] select_ln39_fu_1723_p3;
wire   [15:0] zext_ln57_1_fu_2073_p1;
wire   [15:0] select_ln39_1_fu_2381_p3;
wire   [9:0] zext_ln32_fu_1016_p1;
wire   [11:0] tmp_fu_1032_p3;
wire   [9:0] zext_ln41_fu_1092_p1;
wire   [9:0] add_ln41_fu_1096_p2;
wire   [11:0] tmp_7_fu_1102_p3;
wire   [12:0] zext_ln41_1_fu_1130_p1;
wire   [12:0] add_ln41_1_fu_1134_p2;
wire   [4:0] zext_ln43_fu_1144_p1;
wire   [4:0] add_ln45_fu_1160_p2;
wire   [9:0] shl_ln_fu_1166_p3;
wire   [6:0] shl_ln45_1_fu_1178_p3;
wire   [10:0] zext_ln45_1_fu_1174_p1;
wire   [10:0] zext_ln45_3_fu_1186_p1;
wire   [3:0] shl_ln45_2_fu_1196_p3;
wire   [4:0] zext_ln45_4_fu_1204_p1;
wire   [4:0] zext_ln44_fu_1218_p1;
wire   [4:0] add_ln45_1_fu_1234_p2;
wire   [10:0] zext_ln45_5_fu_1240_p1;
wire   [10:0] add_ln45_2_fu_1244_p2;
wire  signed [31:0] sext_ln45_fu_1249_p1;
wire   [4:0] add_ln45_3_fu_1258_p2;
wire   [6:0] tmp_11_fu_1263_p3;
wire  signed [7:0] sext_ln45_1_fu_1271_p1;
wire   [7:0] add_ln45_4_fu_1275_p2;
wire  signed [31:0] sext_ln45_2_fu_1280_p1;
wire   [0:0] grp_fu_975_p3;
wire   [14:0] trunc_ln52_fu_1303_p1;
wire   [14:0] select_ln57_fu_1307_p3;
wire   [5:0] tmp_5_fu_1326_p3;
wire   [3:0] tmp_6_fu_1338_p3;
wire   [35:0] zext_ln55_fu_1334_p1;
wire   [35:0] zext_ln55_1_fu_1346_p1;
wire   [35:0] sub_ln55_fu_1350_p2;
wire   [36:0] zext_ln55_2_fu_1366_p1;
wire   [38:0] tmp_9_fu_1381_p3;
wire   [5:0] tmp_1_fu_1423_p3;
wire   [3:0] tmp_4_fu_1435_p3;
wire   [6:0] zext_ln59_fu_1431_p1;
wire   [6:0] zext_ln59_1_fu_1443_p1;
wire   [6:0] zext_ln59_2_fu_1473_p1;
wire   [6:0] add_ln59_fu_1477_p2;
wire   [8:0] zext_ln59_4_fu_1514_p1;
wire   [8:0] add_ln59_1_fu_1518_p2;
wire   [4:0] zext_ln60_fu_1528_p1;
wire   [4:0] add_ln62_fu_1544_p2;
wire   [4:0] mul_ln62_fu_1553_p0;
wire   [4:0] zext_ln61_fu_1559_p1;
wire   [4:0] add_ln62_1_fu_1575_p2;
wire   [9:0] zext_ln62_1_fu_1580_p1;
wire   [9:0] add_ln62_2_fu_1584_p2;
wire   [11:0] tmp_14_fu_1589_p3;
wire   [12:0] zext_ln62_2_fu_1597_p1;
wire   [12:0] add_ln62_3_fu_1601_p2;
wire   [0:0] tmp_15_fu_1619_p3;
wire   [0:0] tmp_16_fu_1637_p3;
wire   [0:0] xor_ln39_fu_1655_p2;
wire   [4:0] exponent_a_fu_1627_p4;
wire   [4:0] exponent_b_fu_1645_p4;
wire   [9:0] mantissa_a_fu_1611_p1;
wire   [9:0] mantissa_b_fu_1615_p1;
wire   [0:0] icmp_ln41_fu_1681_p2;
wire   [0:0] icmp_ln43_1_fu_1695_p2;
wire   [0:0] icmp_ln40_fu_1667_p2;
wire   [0:0] xor_ln39_1_fu_1661_p2;
wire   [0:0] and_ln40_fu_1709_p2;
wire   [15:0] select_ln41_fu_1687_p3;
wire   [15:0] select_ln43_fu_1701_p3;
wire   [15:0] select_ln47_fu_1673_p3;
wire   [15:0] select_ln40_fu_1715_p3;
wire   [6:0] tmp_12_fu_1750_p4;
wire   [4:0] tmp_13_fu_1795_p3;
wire   [5:0] zext_ln71_fu_1819_p1;
wire   [5:0] add_ln71_fu_1823_p2;
wire   [8:0] zext_ln71_2_fu_1856_p1;
wire   [8:0] add_ln71_1_fu_1860_p2;
wire   [2:0] zext_ln72_fu_1870_p1;
wire   [2:0] add_ln75_fu_1890_p2;
wire   [5:0] tmp_19_fu_1896_p3;
wire   [3:0] tmp_20_fu_1908_p3;
wire   [6:0] zext_ln75_fu_1904_p1;
wire   [6:0] zext_ln75_1_fu_1916_p1;
wire   [3:0] shl_ln2_fu_1926_p3;
wire   [4:0] zext_ln75_2_fu_1934_p1;
wire   [4:0] zext_ln72_1_fu_1874_p1;
wire   [2:0] zext_ln73_fu_1944_p1;
wire   [2:0] add_ln75_1_fu_1960_p2;
wire   [6:0] zext_ln75_3_fu_1966_p1;
wire   [6:0] add_ln75_5_fu_1970_p2;
wire   [4:0] zext_ln75_4_fu_1983_p1;
wire   [4:0] add_ln75_2_fu_1987_p2;
wire   [6:0] tmp_22_fu_1992_p3;
wire   [8:0] zext_ln75_6_fu_2016_p1;
wire   [8:0] add_ln75_6_fu_2020_p2;
wire   [7:0] zext_ln75_8_fu_2030_p1;
wire   [7:0] add_ln75_3_fu_2034_p2;
wire   [10:0] tmp_23_fu_2039_p3;
wire  signed [31:0] sext_ln75_fu_2047_p1;
wire   [31:0] add_ln75_4_fu_2051_p2;
wire   [14:0] trunc_ln52_1_fu_2061_p1;
wire   [14:0] select_ln57_1_fu_2065_p3;
wire   [4:0] tmp_17_fu_2096_p4;
wire   [2:0] tmp_21_fu_2129_p3;
wire   [3:0] zext_ln87_fu_2159_p1;
wire   [3:0] add_ln87_fu_2163_p2;
wire   [6:0] zext_ln87_2_fu_2198_p1;
wire   [6:0] add_ln87_1_fu_2202_p2;
wire   [1:0] add_ln90_1_fu_2241_p2;
wire   [6:0] tmp_27_fu_2246_p4;
wire   [7:0] zext_ln90_1_fu_2255_p1;
wire   [7:0] add_ln90_2_fu_2259_p2;
wire   [0:0] tmp_28_fu_2277_p3;
wire   [0:0] tmp_29_fu_2295_p3;
wire   [0:0] xor_ln39_2_fu_2313_p2;
wire   [4:0] exponent_a_1_fu_2285_p4;
wire   [4:0] exponent_b_1_fu_2303_p4;
wire   [9:0] mantissa_a_1_fu_2269_p1;
wire   [9:0] mantissa_b_1_fu_2273_p1;
wire   [0:0] icmp_ln41_1_fu_2339_p2;
wire   [0:0] icmp_ln43_2_fu_2353_p2;
wire   [0:0] icmp_ln40_1_fu_2325_p2;
wire   [0:0] xor_ln39_3_fu_2319_p2;
wire   [0:0] and_ln40_1_fu_2367_p2;
wire   [15:0] select_ln41_1_fu_2345_p3;
wire   [15:0] select_ln43_1_fu_2359_p3;
wire   [15:0] select_ln47_1_fu_2331_p3;
wire   [15:0] select_ln40_1_fu_2373_p3;
wire   [2:0] tmp_24_fu_2419_p3;
wire   [3:0] zext_ln99_fu_2443_p1;
wire   [3:0] add_ln99_2_fu_2447_p2;
wire   [0:0] trunc_ln99_fu_2460_p1;
wire   [6:0] zext_ln99_1_fu_2484_p1;
wire   [6:0] add_ln99_3_fu_2488_p2;
wire   [4:0] add_ln99_1_fu_2507_p3;
wire   [4:0] trunc_ln108_fu_2556_p1;
wire   [7:0] shl_ln5_fu_2560_p3;
wire   [5:0] shl_ln108_fu_2572_p2;
wire   [6:0] zext_ln108_3_fu_2578_p1;
wire   [6:0] add_ln108_1_fu_2582_p2;
wire   [8:0] zext_ln108_2_fu_2568_p1;
wire   [8:0] zext_ln108_4_fu_2587_p1;
wire   [8:0] add_ln108_fu_2591_p2;
wire   [0:0] tmp_25_fu_2623_p3;
wire   [0:0] tmp_26_fu_2631_p3;
wire   [4:0] expA_fu_2653_p4;
wire   [4:0] expB_fu_2663_p4;
wire   [9:0] mantissaA_fu_2619_p1;
wire   [9:0] trunc_ln301_fu_2679_p1;
wire   [0:0] icmp_ln469_fu_2683_p2;
wire   [0:0] icmp_ln469_1_fu_2689_p2;
wire   [0:0] select_ln469_fu_2695_p3;
wire   [0:0] icmp_ln463_fu_2707_p2;
wire   [0:0] icmp_ln463_1_fu_2713_p2;
wire   [0:0] select_ln463_fu_2719_p3;
wire   [0:0] xor_ln455_fu_2639_p2;
wire   [1:0] select_ln459_fu_2645_p3;
wire   [1:0] zext_ln455_fu_2727_p1;
wire   [0:0] icmp_ln462_fu_2673_p2;
wire   [0:0] xor_ln455_1_fu_2739_p2;
wire   [0:0] and_ln462_fu_2745_p2;
wire   [1:0] zext_ln463_fu_2703_p1;
wire   [1:0] select_ln455_fu_2731_p3;
wire   [1:0] select_ln462_fu_2751_p3;
wire   [0:0] icmp_ln123_fu_2759_p2;
reg   [63:0] ap_NS_fsm;
wire   [9:0] mul_ln62_fu_1553_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 64'd1;
#0 grp_add_fu_954_ap_start_reg = 1'b0;
#0 grp_multiply_custom_floa_fu_968_ap_start_reg = 1'b0;
end

forward_pass_weigcud #(
    .DataWidth( 16 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
weights_conv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv1_address0),
    .ce0(weights_conv1_ce0),
    .q0(weights_conv1_q0)
);

forward_pass_weigdEe #(
    .DataWidth( 16 ),
    .AddressRange( 288 ),
    .AddressWidth( 9 ))
weights_conv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_conv2_address0),
    .ce0(weights_conv2_ce0),
    .q0(weights_conv2_q0)
);

forward_pass_biaseOg #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
biases_conv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biases_conv2_address0),
    .ce0(biases_conv2_ce0),
    .q0(biases_conv2_q0)
);

forward_pass_weigfYi #(
    .DataWidth( 16 ),
    .AddressRange( 320 ),
    .AddressWidth( 9 ))
weights_dense2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_dense2_address0),
    .ce0(weights_dense2_ce0),
    .q0(weights_dense2_q0)
);

forward_pass_biasg8j #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
biases_dense2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(biases_dense2_address0),
    .ce0(biases_dense2_ce0),
    .q0(biases_dense2_q0)
);

forward_pass_dense #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
dense_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(dense_address0),
    .ce0(dense_ce0),
    .we0(dense_we0),
    .d0(dense_d0),
    .q0(dense_q0)
);

forward_pass_conv1 #(
    .DataWidth( 16 ),
    .AddressRange( 2704 ),
    .AddressWidth( 12 ))
conv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_address0),
    .ce0(conv1_ce0),
    .we0(conv1_we0),
    .d0(conv1_d0),
    .q0(conv1_q0)
);

forward_pass_maxphbi #(
    .DataWidth( 16 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
maxpool1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(maxpool1_address0),
    .ce0(maxpool1_ce0),
    .we0(maxpool1_we0),
    .d0(maxpool1_d0),
    .q0(maxpool1_q0)
);

forward_pass_conv2 #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
conv2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2_address0),
    .ce0(conv2_ce0),
    .we0(conv2_we0),
    .d0(conv2_d0),
    .q0(conv2_q0)
);

forward_pass_maxpibs #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
maxpool2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(maxpool2_address0),
    .ce0(maxpool2_ce0),
    .we0(maxpool2_we0),
    .d0(maxpool2_d0),
    .q0(maxpool2_q0)
);

forward_pass_maxpibs #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
flatten_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(flatten_address0),
    .ce0(flatten_ce0),
    .we0(flatten_we0),
    .d0(flatten_d0),
    .q0(flatten_q0)
);

add grp_add_fu_954(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_add_fu_954_ap_start),
    .ap_done(grp_add_fu_954_ap_done),
    .ap_idle(grp_add_fu_954_ap_idle),
    .ap_ready(grp_add_fu_954_ap_ready),
    .a(grp_add_fu_954_a),
    .b(grp_add_fu_954_b),
    .ap_return(grp_add_fu_954_ap_return)
);

multiply_custom_floa grp_multiply_custom_floa_fu_968(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_multiply_custom_floa_fu_968_ap_start),
    .ap_done(grp_multiply_custom_floa_fu_968_ap_done),
    .ap_idle(grp_multiply_custom_floa_fu_968_ap_idle),
    .ap_ready(grp_multiply_custom_floa_fu_968_ap_ready),
    .a(grp_multiply_custom_floa_fu_968_a),
    .b(grp_multiply_custom_floa_fu_968_b),
    .ap_return(grp_multiply_custom_floa_fu_968_ap_return)
);

forward_pass_mux_kbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
forward_pass_mux_kbM_U7(
    .din0(16'd1658),
    .din1(16'd7631),
    .din2(16'd48171),
    .din3(16'd46804),
    .din4(trunc_ln48_reg_2877),
    .dout(merge_i_fu_1289_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_add_fu_954_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state58) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state36) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1)))) begin
            grp_add_fu_954_ap_start_reg <= 1'b1;
        end else if ((grp_add_fu_954_ap_ready == 1'b1)) begin
            grp_add_fu_954_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_multiply_custom_floa_fu_968_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state11))) begin
            grp_multiply_custom_floa_fu_968_ap_start_reg <= 1'b1;
        end else if ((grp_multiply_custom_floa_fu_968_ap_ready == 1'b1)) begin
            grp_multiply_custom_floa_fu_968_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        agg_result_V_0_reg_920 <= select_ln123_fu_2765_p3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        agg_result_V_0_reg_920 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        b_assign_reg_932 <= select_ln123_1_fu_2773_p3;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        b_assign_reg_932 <= dense_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
        dense_load_1_reg_896 <= grp_add_fu_954_ap_return;
    end else if (((icmp_ln105_fu_2522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        dense_load_1_reg_896 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln89_fu_2229_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        di14_0_reg_818 <= di_3_reg_3251;
    end else if (((icmp_ln86_fu_2182_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        di14_0_reg_818 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln61_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        di4_0_reg_625 <= di_1_reg_3006;
    end else if (((icmp_ln58_fu_1498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        di4_0_reg_625 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_fu_1948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
        di9_0_reg_717 <= di_2_reg_3105;
    end else if (((icmp_ln70_fu_1840_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        di9_0_reg_717 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln44_fu_1222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        di_0_reg_535 <= di_reg_2862;
    end else if (((icmp_ln39_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        di_0_reg_535 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_2004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        dj10_0_reg_728 <= dj_2_reg_3128;
    end else if (((icmp_ln72_fu_1878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        dj10_0_reg_728 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_2212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        dj15_0_reg_829 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        dj15_0_reg_829 <= dj_3_reg_3264;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_1532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        dj5_0_reg_636 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        dj5_0_reg_636 <= dj_1_reg_3019;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_1148_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        dj_0_reg_546 <= 2'd0;
    end else if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        dj_0_reg_546 <= dj_reg_2885;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_fu_1948_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        dk_0_reg_739 <= 3'd0;
    end else if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
        dk_0_reg_739 <= dk_reg_3146;
    end
end

always @ (posedge ap_clk) begin
    if (((phi_ln83_1_reg_762 == 1'd1) & (icmp_ln83_fu_2111_p2 == 1'd1) & (phi_ln83_reg_750 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
        i11_0_reg_785 <= 2'd0;
    end else if (((icmp_ln85_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        i11_0_reg_785 <= i_3_reg_3197;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_2401_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        i16_0_reg_851 <= 2'd0;
    end else if (((icmp_ln97_fu_2431_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        i16_0_reg_851 <= i_4_reg_3285;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_2407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        i19_0_reg_885 <= 4'd0;
    end else if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
        i19_0_reg_885 <= i_6_reg_3344;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_2_fu_1405_p2 == 1'd1) & (icmp_ln55_1_fu_1399_p2 == 1'd1) & (icmp_ln55_fu_1393_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i1_0_reg_592 <= 3'd0;
    end else if (((icmp_ln57_fu_1461_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        i1_0_reg_592 <= i_1_reg_2952;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_2_fu_1777_p2 == 1'd1) & (icmp_ln67_1_fu_1771_p2 == 1'd1) & (icmp_ln67_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        i6_0_reg_682 <= 3'd0;
    end else if (((icmp_ln69_fu_1807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        i6_0_reg_682 <= i_2_reg_3056;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_2_fu_1056_p2 == 1'd1) & (icmp_ln32_1_fu_1050_p2 == 1'd1) & (icmp_ln32_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_0_reg_487 <= 5'd0;
    end else if (((icmp_ln38_fu_1080_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_0_reg_487 <= i_reg_2823;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_2182_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        j12_0_reg_796 <= j_3_reg_3215;
    end else if (((icmp_ln84_fu_2117_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        j12_0_reg_796 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_fu_2472_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        j17_0_reg_863 <= j_5_reg_3298;
    end else if (((icmp_ln96_fu_2407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        j17_0_reg_863 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
        j20_0_reg_909 <= j_6_reg_3367;
    end else if (((icmp_ln105_fu_2522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        j20_0_reg_909 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        j2_0_reg_603 <= j_1_reg_2970;
    end else if (((icmp_ln56_fu_1411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        j2_0_reg_603 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_fu_1840_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        j7_0_reg_694 <= j_2_reg_3069;
    end else if (((icmp_ln68_fu_1783_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        j7_0_reg_694 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_1068_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_0_reg_511 <= 5'd0;
    end else if (((icmp_ln39_fu_1118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        j_0_reg_511 <= j_reg_2831;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_2212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        k13_0_reg_807 <= k_3_reg_3233;
    end else if (((icmp_ln85_fu_2147_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        k13_0_reg_807 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_fu_2431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
        k18_0_reg_874 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        k18_0_reg_874 <= k_4_reg_3316;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_1532_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        k3_0_reg_614 <= k_1_reg_2988;
    end else if (((icmp_ln57_fu_1461_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        k3_0_reg_614 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_1807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        k8_0_reg_706 <= 4'd0;
    end else if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
        k8_0_reg_706 <= k_2_reg_3087;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_fu_1080_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        k_0_reg_523 <= 3'd0;
    end else if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        k_0_reg_523 <= k_reg_2849;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        max_index_V_reg_942 <= i_5_reg_3415;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        max_index_V_reg_942 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1044_p2 == 1'd1) & (icmp_ln32_1_fu_1050_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln32_1_reg_464 <= add_ln32_1_reg_2791;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        phi_ln32_1_reg_464 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1044_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln32_2_reg_476 <= add_ln32_2_fu_1026_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        phi_ln32_2_reg_476 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_1_fu_1050_p2 == 1'd1) & (icmp_ln32_fu_1044_p2 == 1'd1) & (icmp_ln32_2_fu_1056_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln32_reg_440 <= add_ln32_reg_2786;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_ln32_reg_440 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_1393_p2 == 1'd1) & (icmp_ln55_1_fu_1399_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        phi_ln55_1_reg_569 <= add_ln55_1_reg_2925;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        phi_ln55_1_reg_569 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_fu_1393_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        phi_ln55_2_reg_581 <= add_ln55_2_fu_1375_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        phi_ln55_2_reg_581 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_1068_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln55_reg_557 <= 3'd0;
    end else if (((icmp_ln55_1_fu_1399_p2 == 1'd1) & (icmp_ln55_fu_1393_p2 == 1'd1) & (icmp_ln55_2_fu_1405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        phi_ln55_reg_557 <= add_ln55_reg_2915;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_1765_p2 == 1'd1) & (icmp_ln67_1_fu_1771_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        phi_ln67_1_reg_659 <= add_ln67_1_reg_3034;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        phi_ln67_1_reg_659 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln67_fu_1765_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        phi_ln67_2_reg_671 <= add_ln67_2_fu_1744_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        phi_ln67_2_reg_671 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln56_fu_1411_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        phi_ln67_reg_647 <= 2'd0;
    end else if (((icmp_ln67_1_fu_1771_p2 == 1'd1) & (icmp_ln67_fu_1765_p2 == 1'd1) & (icmp_ln67_2_fu_1777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        phi_ln67_reg_647 <= add_ln67_reg_3029;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_fu_2111_p2 == 1'd1) & (phi_ln83_1_reg_762 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        phi_ln83_1_reg_762 <= xor_ln83_reg_3181;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        phi_ln83_1_reg_762 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln83_fu_2111_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        phi_ln83_2_reg_774 <= add_ln83_fu_2090_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        phi_ln83_2_reg_774 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_1783_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        phi_ln83_reg_750 <= 1'd0;
    end else if (((phi_ln83_1_reg_762 == 1'd1) & (icmp_ln83_fu_2111_p2 == 1'd1) & (phi_ln83_reg_750 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        phi_ln83_reg_750 <= xor_ln83_1_reg_3176;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_2117_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        phi_ln95_reg_840 <= 5'd0;
    end else if (((icmp_ln95_fu_2401_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        phi_ln95_reg_840 <= add_ln95_fu_2390_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_2_fu_1056_p2 == 1'd1) & (icmp_ln32_1_fu_1050_p2 == 1'd1) & (icmp_ln32_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul6_reg_499 <= 10'd0;
    end else if (((icmp_ln38_fu_1080_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul6_reg_499 <= add_ln37_reg_2815;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_1_fu_1050_p2 == 1'd1) & (icmp_ln32_fu_1044_p2 == 1'd1) & (icmp_ln32_2_fu_1056_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul_reg_452 <= add_ln32_4_reg_2781;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul_reg_452 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln32_1_reg_2791 <= add_ln32_1_fu_1010_p2;
        add_ln32_3_reg_2796 <= add_ln32_3_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln32_4_reg_2781 <= add_ln32_4_fu_998_p2;
        add_ln32_reg_2786 <= add_ln32_fu_1004_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln37_reg_2815 <= add_ln37_fu_1062_p2;
        i_reg_2823 <= i_fu_1074_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln55_1_reg_2925 <= add_ln55_1_fu_1360_p2;
        add_ln55_3_reg_2930 <= add_ln55_3_fu_1370_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln55_reg_2915 <= add_ln55_fu_1320_p2;
        sext_ln55_reg_2920[36 : 1] <= sext_ln55_fu_1356_p1[36 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln67_1_reg_3034 <= add_ln67_1_fu_1738_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln67_reg_3029 <= add_ln67_fu_1732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln88_fu_2212_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        add_ln90_reg_3256 <= add_ln90_fu_2224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln98_fu_2472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state52))) begin
        add_ln99_reg_3326 <= add_ln99_fu_2498_p2;
        trunc_ln99_1_reg_3331 <= trunc_ln99_1_fu_2503_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        biases_conv2_load_reg_3171 <= biases_conv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        biases_dense2_load_reg_3402 <= biases_dense2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln39_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        conv1_addr_1_reg_2854 <= zext_ln41_2_fu_1139_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_fu_1840_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        conv2_addr_1_reg_3097 <= zext_ln71_3_fu_1865_p1;
        zext_ln71_1_reg_3092[3 : 0] <= zext_ln71_1_fu_1852_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln105_fu_2522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        dense_addr_1_reg_3354 <= zext_ln106_fu_2534_p1;
        zext_ln106_reg_3349[3 : 0] <= zext_ln106_fu_2534_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        di_1_reg_3006 <= di_1_fu_1538_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        di_2_reg_3105 <= di_2_fu_1884_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        di_3_reg_3251 <= di_3_fu_2218_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        di_reg_2862 <= di_fu_1154_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        dj_1_reg_3019 <= dj_1_fu_1569_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        dj_2_reg_3128 <= dj_2_fu_1954_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        dj_3_reg_3264 <= dj_3_fu_2235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        dj_reg_2885 <= dj_fu_1228_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        dk_reg_3146 <= dk_fu_2010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        flatten_load_reg_3387 <= flatten_q0;
        weights_dense2_load_reg_3392 <= weights_dense2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        i_1_reg_2952 <= i_1_fu_1417_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        i_2_reg_3056 <= i_2_fu_1789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        i_3_reg_3197 <= i_3_fu_2123_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        i_4_reg_3285 <= i_4_fu_2413_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        i_5_reg_3415 <= i_5_fu_2608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        i_6_reg_3344 <= i_6_fu_2528_p2;
        zext_ln105_reg_3336[3 : 0] <= zext_ln105_fu_2518_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        image_load_reg_2900 <= image_r_Dout_A;
        weights_conv1_load_reg_2905 <= weights_conv1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_1_reg_2970 <= j_1_fu_1467_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        j_2_reg_3069 <= j_2_fu_1813_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        j_3_reg_3215 <= j_3_fu_2153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        j_5_reg_3298 <= j_5_fu_2437_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        j_6_reg_3367 <= j_6_fu_2545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_reg_2831 <= j_fu_1086_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        k_1_reg_2988 <= k_1_fu_1504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        k_2_reg_3087 <= k_2_fu_1846_p2;
        zext_ln70_reg_3079[3 : 0] <= zext_ln70_fu_1836_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        k_3_reg_3233 <= k_3_fu_2188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        k_4_reg_3316 <= k_4_fu_2478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        k_reg_2849 <= k_fu_1124_p2;
        zext_ln39_1_reg_2841[2 : 0] <= zext_ln39_1_fu_1114_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_1498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        maxpool1_addr_1_reg_2998 <= zext_ln59_5_fu_1523_p1;
        zext_ln59_3_reg_2993[2 : 0] <= zext_ln59_3_fu_1510_p1[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        maxpool1_load_reg_3161 <= maxpool1_q0;
        weights_conv2_load_reg_3166 <= weights_conv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln86_fu_2182_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        maxpool2_addr_1_reg_3243 <= zext_ln87_3_fu_2207_p1;
        zext_ln87_1_reg_3238[3 : 0] <= zext_ln87_1_fu_2194_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        merge_i_reg_2910 <= merge_i_fu_1289_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_1532_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        mul_ln62_reg_3011[9 : 1] <= mul_ln62_fu_1553_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state58) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state36) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1)))) begin
        reg_983 <= grp_multiply_custom_floa_fu_968_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((1'b1 == ap_CS_fsm_state12) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1)))) begin
        reg_988 <= conv1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state36) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1)))) begin
        reg_993 <= conv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_fu_1948_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state32))) begin
        sext_ln74_reg_3138[7 : 2] <= sext_ln74_fu_2000_p1[7 : 2];
        tmp_30_cast_reg_3133[8 : 2] <= tmp_30_cast_fu_1975_p3[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln56_fu_1411_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        shl_ln1_reg_2962[4 : 2] <= shl_ln1_fu_1453_p3[4 : 2];
        sub_ln59_reg_2957[6 : 1] <= sub_ln59_fu_1447_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln97_fu_2431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
        shl_ln4_reg_3308[3] <= shl_ln4_fu_2464_p3[3];
        tmp_37_cast_reg_3303[6 : 3] <= tmp_37_cast_fu_2452_p3[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln57_fu_1461_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        shl_ln62_1_reg_2980[4 : 2] <= shl_ln62_1_fu_1490_p3[4 : 2];
        tmp_17_cast_reg_2975[8 : 2] <= tmp_17_cast_fu_1482_p3[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln85_fu_2147_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        shl_ln90_1_reg_3225[1] <= shl_ln90_1_fu_2176_p2[1];
        tmp_33_cast_reg_3220[6 : 3] <= tmp_33_cast_fu_2168_p3[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln84_fu_2117_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state43))) begin
        shl_ln90_reg_3207[1] <= shl_ln90_fu_2141_p2[1];
        zext_ln90_reg_3202[2 : 1] <= zext_ln90_fu_2137_p1[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_1148_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        sub_ln45_1_reg_2872 <= sub_ln45_1_fu_1208_p2;
        sub_ln45_reg_2867[10 : 2] <= sub_ln45_fu_1190_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln72_fu_1878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
        sub_ln75_1_reg_3110[6 : 1] <= sub_ln75_1_fu_1920_p2[6 : 1];
        sub_ln75_reg_3115 <= sub_ln75_fu_1938_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln69_fu_1807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        tmp_23_cast_reg_3074[8 : 3] <= tmp_23_cast_fu_1828_p3[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_1148_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        trunc_ln48_reg_2877 <= trunc_ln48_fu_1214_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        xor_ln83_1_reg_3176 <= xor_ln83_1_fu_2078_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        xor_ln83_reg_3181 <= xor_ln83_fu_2084_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln38_fu_1080_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        zext_ln39_reg_2836[11 : 2] <= zext_ln39_fu_1110_p1[11 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_fu_1783_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        zext_ln69_reg_3061[4 : 2] <= zext_ln69_fu_1803_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln96_fu_2407_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        zext_ln97_reg_3290[2 : 1] <= zext_ln97_fu_2427_p1[2 : 1];
    end
end

always @ (*) begin
    if (((icmp_ln122_fu_2602_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln122_fu_2602_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        biases_conv2_ce0 = 1'b1;
    end else begin
        biases_conv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        biases_dense2_ce0 = 1'b1;
    end else begin
        biases_dense2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_address0 = zext_ln62_3_fu_1606_p1;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state11))) begin
        conv1_address0 = conv1_addr_1_reg_2854;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        conv1_address0 = zext_ln41_2_fu_1139_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1_address0 = zext_ln32_1_fu_1039_p1;
    end else begin
        conv1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state11) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)))) begin
        conv1_ce0 = 1'b1;
    end else begin
        conv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        conv1_d0 = zext_ln57_fu_1315_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        conv1_d0 = grp_add_fu_954_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        conv1_d0 = 16'd0;
    end else begin
        conv1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13)) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln39_fu_1118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        conv1_we0 = 1'b1;
    end else begin
        conv1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        conv2_address0 = zext_ln90_2_fu_2264_p1;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state35))) begin
        conv2_address0 = conv2_addr_1_reg_3097;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        conv2_address0 = zext_ln71_3_fu_1865_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        conv2_address0 = zext_ln67_fu_1760_p1;
    end else begin
        conv2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state35) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39)))) begin
        conv2_ce0 = 1'b1;
    end else begin
        conv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        conv2_d0 = zext_ln57_1_fu_2073_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        conv2_d0 = grp_add_fu_954_ap_return;
    end else if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state27))) begin
        conv2_d0 = 16'd0;
    end else begin
        conv2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37)) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39)) | ((icmp_ln70_fu_1840_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30)))) begin
        conv2_we0 = 1'b1;
    end else begin
        conv2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        dense_address0 = zext_ln123_fu_2614_p1;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state61))) begin
        dense_address0 = dense_addr_1_reg_3354;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        dense_address0 = 64'd0;
    end else begin
        dense_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state54) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61)))) begin
        dense_ce0 = 1'b1;
    end else begin
        dense_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        dense_d0 = grp_add_fu_954_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        dense_d0 = dense_load_1_reg_896;
    end else begin
        dense_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | ((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61)))) begin
        dense_we0 = 1'b1;
    end else begin
        dense_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        flatten_address0 = zext_ln108_fu_2551_p1;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        flatten_address0 = zext_ln99_3_fu_2513_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        flatten_address0 = zext_ln95_fu_2396_p1;
    end else begin
        flatten_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state53))) begin
        flatten_ce0 = 1'b1;
    end else begin
        flatten_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        flatten_d0 = maxpool2_q0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        flatten_d0 = 16'd0;
    end else begin
        flatten_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state53))) begin
        flatten_we0 = 1'b1;
    end else begin
        flatten_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state61))) begin
        grp_add_fu_954_a = dense_load_1_reg_896;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state39))) begin
        grp_add_fu_954_a = reg_993;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_add_fu_954_a = reg_988;
    end else begin
        grp_add_fu_954_a = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        grp_add_fu_954_b = biases_dense2_load_reg_3402;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_add_fu_954_b = biases_conv2_load_reg_3171;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_add_fu_954_b = merge_i_reg_2910;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state59))) begin
        grp_add_fu_954_b = reg_983;
    end else begin
        grp_add_fu_954_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_multiply_custom_floa_fu_968_a = flatten_load_reg_3387;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_multiply_custom_floa_fu_968_a = maxpool1_load_reg_3161;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_multiply_custom_floa_fu_968_a = image_load_reg_2900;
    end else begin
        grp_multiply_custom_floa_fu_968_a = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_multiply_custom_floa_fu_968_b = weights_dense2_load_reg_3392;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        grp_multiply_custom_floa_fu_968_b = weights_conv2_load_reg_3166;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_multiply_custom_floa_fu_968_b = weights_conv1_load_reg_2905;
    end else begin
        grp_multiply_custom_floa_fu_968_b = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        image_r_EN_A = 1'b1;
    end else begin
        image_r_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        maxpool1_address0 = zext_ln75_7_fu_2025_p1;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23))) begin
        maxpool1_address0 = maxpool1_addr_1_reg_2998;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        maxpool1_address0 = zext_ln59_5_fu_1523_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        maxpool1_address0 = sext_ln55_1_fu_1388_p1;
    end else begin
        maxpool1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18))) begin
        maxpool1_ce0 = 1'b1;
    end else begin
        maxpool1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        maxpool1_d0 = select_ln39_fu_1723_p3;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state18))) begin
        maxpool1_d0 = 16'd0;
    end else begin
        maxpool1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state18) | ((icmp_ln58_fu_1498_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21)))) begin
        maxpool1_we0 = 1'b1;
    end else begin
        maxpool1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        maxpool2_address0 = zext_ln99_2_fu_2493_p1;
    end else if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47))) begin
        maxpool2_address0 = maxpool2_addr_1_reg_3243;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        maxpool2_address0 = zext_ln87_3_fu_2207_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        maxpool2_address0 = zext_ln83_fu_2106_p1;
    end else begin
        maxpool2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state42))) begin
        maxpool2_ce0 = 1'b1;
    end else begin
        maxpool2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        maxpool2_d0 = select_ln39_1_fu_2381_p3;
    end else if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state42))) begin
        maxpool2_d0 = 16'd0;
    end else begin
        maxpool2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state42) | ((icmp_ln86_fu_2182_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45)))) begin
        maxpool2_we0 = 1'b1;
    end else begin
        maxpool2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        weights_conv1_ce0 = 1'b1;
    end else begin
        weights_conv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        weights_conv2_ce0 = 1'b1;
    end else begin
        weights_conv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        weights_dense2_ce0 = 1'b1;
    end else begin
        weights_dense2_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln32_2_fu_1056_p2 == 1'd1) & (icmp_ln32_1_fu_1050_p2 == 1'd1) & (icmp_ln32_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else if (((icmp_ln32_1_fu_1050_p2 == 1'd1) & (icmp_ln32_fu_1044_p2 == 1'd1) & (icmp_ln32_2_fu_1056_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((icmp_ln32_fu_1044_p2 == 1'd1) & (icmp_ln32_1_fu_1050_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln37_fu_1068_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln38_fu_1080_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln39_fu_1118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln43_fu_1148_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln44_fu_1222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln55_2_fu_1405_p2 == 1'd1) & (icmp_ln55_1_fu_1399_p2 == 1'd1) & (icmp_ln55_fu_1393_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((icmp_ln55_1_fu_1399_p2 == 1'd1) & (icmp_ln55_fu_1393_p2 == 1'd1) & (icmp_ln55_2_fu_1405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((icmp_ln55_fu_1393_p2 == 1'd1) & (icmp_ln55_1_fu_1399_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln56_fu_1411_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln57_fu_1461_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln58_fu_1498_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln60_fu_1532_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln61_fu_1563_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((icmp_ln67_2_fu_1777_p2 == 1'd1) & (icmp_ln67_1_fu_1771_p2 == 1'd1) & (icmp_ln67_fu_1765_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else if (((icmp_ln67_1_fu_1771_p2 == 1'd1) & (icmp_ln67_fu_1765_p2 == 1'd1) & (icmp_ln67_2_fu_1777_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if (((icmp_ln67_fu_1765_p2 == 1'd1) & (icmp_ln67_1_fu_1771_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln68_fu_1783_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln69_fu_1807_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln70_fu_1840_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln72_fu_1878_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((icmp_ln73_fu_1948_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((icmp_ln74_fu_2004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((phi_ln83_1_reg_762 == 1'd1) & (icmp_ln83_fu_2111_p2 == 1'd1) & (phi_ln83_reg_750 == 1'd1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else if (((phi_ln83_1_reg_762 == 1'd1) & (icmp_ln83_fu_2111_p2 == 1'd1) & (phi_ln83_reg_750 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if (((icmp_ln83_fu_2111_p2 == 1'd1) & (phi_ln83_1_reg_762 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            if (((icmp_ln84_fu_2117_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((icmp_ln85_fu_2147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln86_fu_2182_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((icmp_ln88_fu_2212_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln89_fu_2229_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state49 : begin
            if (((icmp_ln95_fu_2401_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln96_fu_2407_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((icmp_ln97_fu_2431_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln98_fu_2472_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln105_fu_2522_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((icmp_ln107_fu_2539_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (grp_multiply_custom_floa_fu_968_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            if (((grp_add_fu_954_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            if (((icmp_ln122_fu_2602_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln108_1_fu_2582_p2 = (zext_ln105_reg_3336 + zext_ln108_3_fu_2578_p1);

assign add_ln108_fu_2591_p2 = (zext_ln108_2_fu_2568_p1 + zext_ln108_4_fu_2587_p1);

assign add_ln32_1_fu_1010_p2 = (phi_ln32_1_reg_464 + 5'd1);

assign add_ln32_2_fu_1026_p2 = (phi_ln32_2_reg_476 + 2'd1);

assign add_ln32_3_fu_1020_p2 = (zext_ln32_fu_1016_p1 + phi_mul_reg_452);

assign add_ln32_4_fu_998_p2 = (phi_mul_reg_452 + 10'd26);

assign add_ln32_fu_1004_p2 = (phi_ln32_reg_440 + 5'd1);

assign add_ln37_fu_1062_p2 = (phi_mul6_reg_499 + 10'd26);

assign add_ln41_1_fu_1134_p2 = (zext_ln39_reg_2836 + zext_ln41_1_fu_1130_p1);

assign add_ln41_fu_1096_p2 = (phi_mul6_reg_499 + zext_ln41_fu_1092_p1);

assign add_ln45_1_fu_1234_p2 = (zext_ln44_fu_1218_p1 + j_0_reg_511);

assign add_ln45_2_fu_1244_p2 = (sub_ln45_reg_2867 + zext_ln45_5_fu_1240_p1);

assign add_ln45_3_fu_1258_p2 = (zext_ln44_fu_1218_p1 + sub_ln45_1_reg_2872);

assign add_ln45_4_fu_1275_p2 = ($signed(zext_ln39_1_reg_2841) + $signed(sext_ln45_1_fu_1271_p1));

assign add_ln45_fu_1160_p2 = (zext_ln43_fu_1144_p1 + i_0_reg_487);

assign add_ln55_1_fu_1360_p2 = (phi_ln55_1_reg_569 + 3'd1);

assign add_ln55_2_fu_1375_p2 = (phi_ln55_2_reg_581 + 2'd1);

assign add_ln55_3_fu_1370_p2 = ($signed(zext_ln55_2_fu_1366_p1) + $signed(sext_ln55_reg_2920));

assign add_ln55_fu_1320_p2 = (phi_ln55_reg_557 + 3'd1);

assign add_ln59_1_fu_1518_p2 = (tmp_17_cast_reg_2975 + zext_ln59_4_fu_1514_p1);

assign add_ln59_fu_1477_p2 = (zext_ln59_2_fu_1473_p1 + sub_ln59_reg_2957);

assign add_ln62_1_fu_1575_p2 = (shl_ln62_1_reg_2980 + zext_ln61_fu_1559_p1);

assign add_ln62_2_fu_1584_p2 = (zext_ln62_1_fu_1580_p1 + mul_ln62_reg_3011);

assign add_ln62_3_fu_1601_p2 = (zext_ln59_3_reg_2993 + zext_ln62_2_fu_1597_p1);

assign add_ln62_fu_1544_p2 = (zext_ln60_fu_1528_p1 + shl_ln1_reg_2962);

assign add_ln67_1_fu_1738_p2 = (phi_ln67_1_reg_659 + 2'd1);

assign add_ln67_2_fu_1744_p2 = (phi_ln67_2_reg_671 + 3'd1);

assign add_ln67_fu_1732_p2 = (phi_ln67_reg_647 + 2'd1);

assign add_ln71_1_fu_1860_p2 = (tmp_23_cast_reg_3074 + zext_ln71_2_fu_1856_p1);

assign add_ln71_fu_1823_p2 = (zext_ln71_fu_1819_p1 + zext_ln69_reg_3061);

assign add_ln75_1_fu_1960_p2 = (zext_ln73_fu_1944_p1 + j7_0_reg_694);

assign add_ln75_2_fu_1987_p2 = (zext_ln75_4_fu_1983_p1 + sub_ln75_reg_3115);

assign add_ln75_3_fu_2034_p2 = ($signed(sext_ln74_reg_3138) + $signed(zext_ln75_8_fu_2030_p1));

assign add_ln75_4_fu_2051_p2 = ($signed(sext_ln75_fu_2047_p1) + $signed(zext_ln70_reg_3079));

assign add_ln75_5_fu_1970_p2 = (sub_ln75_1_reg_3110 + zext_ln75_3_fu_1966_p1);

assign add_ln75_6_fu_2020_p2 = (zext_ln75_6_fu_2016_p1 + tmp_30_cast_reg_3133);

assign add_ln75_fu_1890_p2 = (zext_ln72_fu_1870_p1 + i6_0_reg_682);

assign add_ln83_fu_2090_p2 = (phi_ln83_2_reg_774 + 3'd1);

assign add_ln87_1_fu_2202_p2 = (tmp_33_cast_reg_3220 + zext_ln87_2_fu_2198_p1);

assign add_ln87_fu_2163_p2 = (zext_ln90_reg_3202 + zext_ln87_fu_2159_p1);

assign add_ln90_1_fu_2241_p2 = (shl_ln90_1_reg_3225 + dj15_0_reg_829);

assign add_ln90_2_fu_2259_p2 = (zext_ln87_1_reg_3238 + zext_ln90_1_fu_2255_p1);

assign add_ln90_fu_2224_p2 = (di14_0_reg_818 + shl_ln90_reg_3207);

assign add_ln95_fu_2390_p2 = (phi_ln95_reg_840 + 5'd1);

assign add_ln99_1_fu_2507_p3 = {{trunc_ln99_1_reg_3331}, {add_ln99_reg_3326}};

assign add_ln99_2_fu_2447_p2 = (zext_ln99_fu_2443_p1 + zext_ln97_reg_3290);

assign add_ln99_3_fu_2488_p2 = (zext_ln99_1_fu_2484_p1 + tmp_37_cast_reg_3303);

assign add_ln99_fu_2498_p2 = (k18_0_reg_874 + shl_ln4_reg_3308);

assign and_ln40_1_fu_2367_p2 = (xor_ln39_3_fu_2319_p2 & icmp_ln40_1_fu_2325_p2);

assign and_ln40_fu_1709_p2 = (xor_ln39_1_fu_1661_p2 & icmp_ln40_fu_1667_p2);

assign and_ln462_fu_2745_p2 = (xor_ln455_1_fu_2739_p2 & icmp_ln462_fu_2673_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = agg_result_V_0_reg_920;

assign biases_conv2_address0 = zext_ln71_1_reg_3092;

assign biases_dense2_address0 = zext_ln106_reg_3349;

assign di_1_fu_1538_p2 = (di4_0_reg_625 + 3'd1);

assign di_2_fu_1884_p2 = (di9_0_reg_717 + 2'd1);

assign di_3_fu_2218_p2 = (di14_0_reg_818 + 2'd1);

assign di_fu_1154_p2 = (di_0_reg_535 + 2'd1);

assign dj_1_fu_1569_p2 = (dj5_0_reg_636 + 3'd1);

assign dj_2_fu_1954_p2 = (dj10_0_reg_728 + 2'd1);

assign dj_3_fu_2235_p2 = (dj15_0_reg_829 + 2'd1);

assign dj_fu_1228_p2 = (dj_0_reg_546 + 2'd1);

assign dk_fu_2010_p2 = (dk_0_reg_739 + 3'd1);

assign expA_fu_2653_p4 = {{dense_q0[14:10]}};

assign expB_fu_2663_p4 = {{b_assign_reg_932[14:10]}};

assign exponent_a_1_fu_2285_p4 = {{maxpool2_q0[14:10]}};

assign exponent_a_fu_1627_p4 = {{maxpool1_q0[14:10]}};

assign exponent_b_1_fu_2303_p4 = {{conv2_q0[14:10]}};

assign exponent_b_fu_1645_p4 = {{conv1_q0[14:10]}};

assign grp_add_fu_954_ap_start = grp_add_fu_954_ap_start_reg;

assign grp_fu_975_p3 = grp_add_fu_954_ap_return[32'd15];

assign grp_multiply_custom_floa_fu_968_ap_start = grp_multiply_custom_floa_fu_968_ap_start_reg;

assign i_1_fu_1417_p2 = (i1_0_reg_592 + 3'd1);

assign i_2_fu_1789_p2 = (i6_0_reg_682 + 3'd1);

assign i_3_fu_2123_p2 = (i11_0_reg_785 + 2'd1);

assign i_4_fu_2413_p2 = (i16_0_reg_851 + 2'd1);

assign i_5_fu_2608_p2 = (max_index_V_reg_942 + 4'd1);

assign i_6_fu_2528_p2 = (i19_0_reg_885 + 4'd1);

assign i_fu_1074_p2 = (i_0_reg_487 + 5'd1);

assign icmp_ln105_fu_2522_p2 = ((i19_0_reg_885 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_2539_p2 = ((j20_0_reg_909 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_2602_p2 = ((max_index_V_reg_942 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_2759_p2 = ((select_ln462_fu_2751_p3 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln32_1_fu_1050_p2 = ((phi_ln32_1_reg_464 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_1056_p2 = ((phi_ln32_reg_440 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1044_p2 = ((phi_ln32_2_reg_476 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_1068_p2 = ((i_0_reg_487 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln38_fu_1080_p2 = ((j_0_reg_511 == 5'd26) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_1118_p2 = ((k_0_reg_523 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln40_1_fu_2325_p2 = ((exponent_a_1_fu_2285_p4 == exponent_b_1_fu_2303_p4) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_1667_p2 = ((exponent_a_fu_1627_p4 == exponent_b_fu_1645_p4) ? 1'b1 : 1'b0);

assign icmp_ln41_1_fu_2339_p2 = ((mantissa_a_1_fu_2269_p1 > mantissa_b_1_fu_2273_p1) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_1681_p2 = ((mantissa_a_fu_1611_p1 > mantissa_b_fu_1615_p1) ? 1'b1 : 1'b0);

assign icmp_ln43_1_fu_1695_p2 = ((exponent_a_fu_1627_p4 > exponent_b_fu_1645_p4) ? 1'b1 : 1'b0);

assign icmp_ln43_2_fu_2353_p2 = ((exponent_a_1_fu_2285_p4 > exponent_b_1_fu_2303_p4) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1148_p2 = ((di_0_reg_535 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_1222_p2 = ((dj_0_reg_546 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln462_fu_2673_p2 = ((expA_fu_2653_p4 == expB_fu_2663_p4) ? 1'b1 : 1'b0);

assign icmp_ln463_1_fu_2713_p2 = ((expA_fu_2653_p4 > expB_fu_2663_p4) ? 1'b1 : 1'b0);

assign icmp_ln463_fu_2707_p2 = ((expA_fu_2653_p4 < expB_fu_2663_p4) ? 1'b1 : 1'b0);

assign icmp_ln469_1_fu_2689_p2 = ((mantissaA_fu_2619_p1 > trunc_ln301_fu_2679_p1) ? 1'b1 : 1'b0);

assign icmp_ln469_fu_2683_p2 = ((mantissaA_fu_2619_p1 < trunc_ln301_fu_2679_p1) ? 1'b1 : 1'b0);

assign icmp_ln55_1_fu_1399_p2 = ((phi_ln55_1_reg_569 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln55_2_fu_1405_p2 = ((phi_ln55_reg_557 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_1393_p2 = ((phi_ln55_2_reg_581 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_1411_p2 = ((i1_0_reg_592 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_1461_p2 = ((j2_0_reg_603 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_1498_p2 = ((k3_0_reg_614 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_1532_p2 = ((di4_0_reg_625 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_1563_p2 = ((dj5_0_reg_636 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln67_1_fu_1771_p2 = ((phi_ln67_1_reg_659 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln67_2_fu_1777_p2 = ((phi_ln67_reg_647 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln67_fu_1765_p2 = ((phi_ln67_2_reg_671 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_1783_p2 = ((i6_0_reg_682 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_1807_p2 = ((j7_0_reg_694 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_1840_p2 = ((k8_0_reg_706 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_1878_p2 = ((di9_0_reg_717 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_1948_p2 = ((dj10_0_reg_728 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_2004_p2 = ((dk_0_reg_739 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_2111_p2 = ((phi_ln83_2_reg_774 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_2117_p2 = ((i11_0_reg_785 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln85_fu_2147_p2 = ((j12_0_reg_796 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_2182_p2 = ((k13_0_reg_807 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_2212_p2 = ((di14_0_reg_818 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln89_fu_2229_p2 = ((dj15_0_reg_829 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_2401_p2 = ((phi_ln95_reg_840 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_2407_p2 = ((i16_0_reg_851 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln97_fu_2431_p2 = ((j17_0_reg_863 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_2472_p2 = ((k18_0_reg_874 == 4'd8) ? 1'b1 : 1'b0);

assign image_r_Addr_A = image_r_Addr_A_orig << 32'd1;

assign image_r_Addr_A_orig = zext_ln45_fu_1253_p1;

assign image_r_Clk_A = ap_clk;

assign image_r_Din_A = 16'd0;

assign image_r_Rst_A = ap_rst;

assign image_r_WEN_A = 2'd0;

assign j_1_fu_1467_p2 = (j2_0_reg_603 + 3'd1);

assign j_2_fu_1813_p2 = (j7_0_reg_694 + 3'd1);

assign j_3_fu_2153_p2 = (j12_0_reg_796 + 2'd1);

assign j_5_fu_2437_p2 = (j17_0_reg_863 + 2'd1);

assign j_6_fu_2545_p2 = (j20_0_reg_909 + 6'd1);

assign j_fu_1086_p2 = (j_0_reg_511 + 5'd1);

assign k_1_fu_1504_p2 = (k3_0_reg_614 + 3'd1);

assign k_2_fu_1846_p2 = (k8_0_reg_706 + 4'd1);

assign k_3_fu_2188_p2 = (k13_0_reg_807 + 4'd1);

assign k_4_fu_2478_p2 = (k18_0_reg_874 + 4'd1);

assign k_fu_1124_p2 = (k_0_reg_523 + 3'd1);

assign mantissaA_fu_2619_p1 = dense_q0[9:0];

assign mantissa_a_1_fu_2269_p1 = maxpool2_q0[9:0];

assign mantissa_a_fu_1611_p1 = maxpool1_q0[9:0];

assign mantissa_b_1_fu_2273_p1 = conv2_q0[9:0];

assign mantissa_b_fu_1615_p1 = conv1_q0[9:0];

assign mul_ln62_fu_1553_p0 = mul_ln62_fu_1553_p00;

assign mul_ln62_fu_1553_p00 = add_ln62_fu_1544_p2;

assign mul_ln62_fu_1553_p2 = (mul_ln62_fu_1553_p0 * $signed('h1A));

assign select_ln123_1_fu_2773_p3 = ((icmp_ln123_fu_2759_p2[0:0] === 1'b1) ? b_assign_reg_932 : dense_q0);

assign select_ln123_fu_2765_p3 = ((icmp_ln123_fu_2759_p2[0:0] === 1'b1) ? agg_result_V_0_reg_920 : max_index_V_reg_942);

assign select_ln39_1_fu_2381_p3 = ((xor_ln39_2_fu_2313_p2[0:0] === 1'b1) ? select_ln47_1_fu_2331_p3 : select_ln40_1_fu_2373_p3);

assign select_ln39_fu_1723_p3 = ((xor_ln39_fu_1655_p2[0:0] === 1'b1) ? select_ln47_fu_1673_p3 : select_ln40_fu_1715_p3);

assign select_ln40_1_fu_2373_p3 = ((and_ln40_1_fu_2367_p2[0:0] === 1'b1) ? select_ln41_1_fu_2345_p3 : select_ln43_1_fu_2359_p3);

assign select_ln40_fu_1715_p3 = ((and_ln40_fu_1709_p2[0:0] === 1'b1) ? select_ln41_fu_1687_p3 : select_ln43_fu_1701_p3);

assign select_ln41_1_fu_2345_p3 = ((icmp_ln41_1_fu_2339_p2[0:0] === 1'b1) ? maxpool2_q0 : conv2_q0);

assign select_ln41_fu_1687_p3 = ((icmp_ln41_fu_1681_p2[0:0] === 1'b1) ? maxpool1_q0 : conv1_q0);

assign select_ln43_1_fu_2359_p3 = ((icmp_ln43_2_fu_2353_p2[0:0] === 1'b1) ? maxpool2_q0 : conv2_q0);

assign select_ln43_fu_1701_p3 = ((icmp_ln43_1_fu_1695_p2[0:0] === 1'b1) ? maxpool1_q0 : conv1_q0);

assign select_ln455_fu_2731_p3 = ((xor_ln455_fu_2639_p2[0:0] === 1'b1) ? select_ln459_fu_2645_p3 : zext_ln455_fu_2727_p1);

assign select_ln459_fu_2645_p3 = ((tmp_26_fu_2631_p3[0:0] === 1'b1) ? 2'd3 : 2'd0);

assign select_ln462_fu_2751_p3 = ((and_ln462_fu_2745_p2[0:0] === 1'b1) ? zext_ln463_fu_2703_p1 : select_ln455_fu_2731_p3);

assign select_ln463_fu_2719_p3 = ((tmp_25_fu_2623_p3[0:0] === 1'b1) ? icmp_ln463_fu_2707_p2 : icmp_ln463_1_fu_2713_p2);

assign select_ln469_fu_2695_p3 = ((tmp_25_fu_2623_p3[0:0] === 1'b1) ? icmp_ln469_fu_2683_p2 : icmp_ln469_1_fu_2689_p2);

assign select_ln47_1_fu_2331_p3 = ((tmp_28_fu_2277_p3[0:0] === 1'b1) ? conv2_q0 : maxpool2_q0);

assign select_ln47_fu_1673_p3 = ((tmp_15_fu_1619_p3[0:0] === 1'b1) ? conv1_q0 : maxpool1_q0);

assign select_ln57_1_fu_2065_p3 = ((grp_fu_975_p3[0:0] === 1'b1) ? 15'd0 : trunc_ln52_1_fu_2061_p1);

assign select_ln57_fu_1307_p3 = ((grp_fu_975_p3[0:0] === 1'b1) ? 15'd0 : trunc_ln52_fu_1303_p1);

assign sext_ln45_1_fu_1271_p1 = $signed(tmp_11_fu_1263_p3);

assign sext_ln45_2_fu_1280_p1 = $signed(add_ln45_4_fu_1275_p2);

assign sext_ln45_fu_1249_p1 = $signed(add_ln45_2_fu_1244_p2);

assign sext_ln55_1_fu_1388_p1 = $signed(tmp_9_fu_1381_p3);

assign sext_ln55_fu_1356_p1 = $signed(sub_ln55_fu_1350_p2);

assign sext_ln74_fu_2000_p1 = $signed(tmp_22_fu_1992_p3);

assign sext_ln75_fu_2047_p1 = $signed(tmp_23_fu_2039_p3);

assign shl_ln108_fu_2572_p2 = j20_0_reg_909 << 6'd1;

assign shl_ln1_fu_1453_p3 = {{i1_0_reg_592}, {2'd0}};

assign shl_ln2_fu_1926_p3 = {{di9_0_reg_717}, {2'd0}};

assign shl_ln45_1_fu_1178_p3 = {{add_ln45_fu_1160_p2}, {2'd0}};

assign shl_ln45_2_fu_1196_p3 = {{di_0_reg_535}, {2'd0}};

assign shl_ln4_fu_2464_p3 = {{trunc_ln99_fu_2460_p1}, {3'd0}};

assign shl_ln5_fu_2560_p3 = {{trunc_ln108_fu_2556_p1}, {3'd0}};

assign shl_ln62_1_fu_1490_p3 = {{j2_0_reg_603}, {2'd0}};

assign shl_ln90_1_fu_2176_p2 = j12_0_reg_796 << 2'd1;

assign shl_ln90_fu_2141_p2 = i11_0_reg_785 << 2'd1;

assign shl_ln_fu_1166_p3 = {{add_ln45_fu_1160_p2}, {5'd0}};

assign sub_ln45_1_fu_1208_p2 = (zext_ln45_4_fu_1204_p1 - zext_ln43_fu_1144_p1);

assign sub_ln45_fu_1190_p2 = (zext_ln45_1_fu_1174_p1 - zext_ln45_3_fu_1186_p1);

assign sub_ln55_fu_1350_p2 = (zext_ln55_fu_1334_p1 - zext_ln55_1_fu_1346_p1);

assign sub_ln59_fu_1447_p2 = (zext_ln59_fu_1431_p1 - zext_ln59_1_fu_1443_p1);

assign sub_ln75_1_fu_1920_p2 = (zext_ln75_fu_1904_p1 - zext_ln75_1_fu_1916_p1);

assign sub_ln75_fu_1938_p2 = (zext_ln75_2_fu_1934_p1 - zext_ln72_1_fu_1874_p1);

assign tmp_11_fu_1263_p3 = {{add_ln45_3_fu_1258_p2}, {2'd0}};

assign tmp_12_fu_1750_p4 = {{{phi_ln67_reg_647}, {phi_ln67_1_reg_659}}, {phi_ln67_2_reg_671}};

assign tmp_13_fu_1795_p3 = {{i6_0_reg_682}, {2'd0}};

assign tmp_14_fu_1589_p3 = {{add_ln62_2_fu_1584_p2}, {2'd0}};

assign tmp_15_fu_1619_p3 = maxpool1_q0[32'd15];

assign tmp_16_fu_1637_p3 = conv1_q0[32'd15];

assign tmp_17_cast_fu_1482_p3 = {{add_ln59_fu_1477_p2}, {2'd0}};

assign tmp_17_fu_2096_p4 = {{{phi_ln83_reg_750}, {phi_ln83_1_reg_762}}, {phi_ln83_2_reg_774}};

assign tmp_19_fu_1896_p3 = {{add_ln75_fu_1890_p2}, {3'd0}};

assign tmp_1_fu_1423_p3 = {{i1_0_reg_592}, {3'd0}};

assign tmp_20_fu_1908_p3 = {{add_ln75_fu_1890_p2}, {1'd0}};

assign tmp_21_fu_2129_p3 = {{i11_0_reg_785}, {1'd0}};

assign tmp_22_fu_1992_p3 = {{add_ln75_2_fu_1987_p2}, {2'd0}};

assign tmp_23_cast_fu_1828_p3 = {{add_ln71_fu_1823_p2}, {3'd0}};

assign tmp_23_fu_2039_p3 = {{add_ln75_3_fu_2034_p2}, {3'd0}};

assign tmp_24_fu_2419_p3 = {{i16_0_reg_851}, {1'd0}};

assign tmp_25_fu_2623_p3 = dense_q0[32'd15];

assign tmp_26_fu_2631_p3 = b_assign_reg_932[32'd15];

assign tmp_27_fu_2246_p4 = {{{add_ln90_reg_3256}, {add_ln90_1_fu_2241_p2}}, {3'd0}};

assign tmp_28_fu_2277_p3 = maxpool2_q0[32'd15];

assign tmp_29_fu_2295_p3 = conv2_q0[32'd15];

assign tmp_30_cast_fu_1975_p3 = {{add_ln75_5_fu_1970_p2}, {2'd0}};

assign tmp_33_cast_fu_2168_p3 = {{add_ln87_fu_2163_p2}, {3'd0}};

assign tmp_37_cast_fu_2452_p3 = {{add_ln99_2_fu_2447_p2}, {3'd0}};

assign tmp_4_fu_1435_p3 = {{i1_0_reg_592}, {1'd0}};

assign tmp_5_fu_1326_p3 = {{phi_ln55_reg_557}, {3'd0}};

assign tmp_6_fu_1338_p3 = {{phi_ln55_reg_557}, {1'd0}};

assign tmp_7_fu_1102_p3 = {{add_ln41_fu_1096_p2}, {2'd0}};

assign tmp_9_fu_1381_p3 = {{add_ln55_3_reg_2930}, {phi_ln55_2_reg_581}};

assign tmp_fu_1032_p3 = {{add_ln32_3_reg_2796}, {phi_ln32_2_reg_476}};

assign trunc_ln108_fu_2556_p1 = j20_0_reg_909[4:0];

assign trunc_ln301_fu_2679_p1 = b_assign_reg_932[9:0];

assign trunc_ln48_fu_1214_p1 = k_0_reg_523[1:0];

assign trunc_ln52_1_fu_2061_p1 = grp_add_fu_954_ap_return[14:0];

assign trunc_ln52_fu_1303_p1 = grp_add_fu_954_ap_return[14:0];

assign trunc_ln99_1_fu_2503_p1 = i16_0_reg_851[0:0];

assign trunc_ln99_fu_2460_p1 = j17_0_reg_863[0:0];

assign weights_conv1_address0 = zext_ln45_2_fu_1284_p1;

assign weights_conv2_address0 = zext_ln75_5_fu_2056_p1;

assign weights_dense2_address0 = zext_ln108_1_fu_2597_p1;

assign xor_ln39_1_fu_1661_p2 = (xor_ln39_fu_1655_p2 ^ 1'd1);

assign xor_ln39_2_fu_2313_p2 = (tmp_29_fu_2295_p3 ^ tmp_28_fu_2277_p3);

assign xor_ln39_3_fu_2319_p2 = (xor_ln39_2_fu_2313_p2 ^ 1'd1);

assign xor_ln39_fu_1655_p2 = (tmp_16_fu_1637_p3 ^ tmp_15_fu_1619_p3);

assign xor_ln455_1_fu_2739_p2 = (xor_ln455_fu_2639_p2 ^ 1'd1);

assign xor_ln455_fu_2639_p2 = (tmp_26_fu_2631_p3 ^ tmp_25_fu_2623_p3);

assign xor_ln83_1_fu_2078_p2 = (phi_ln83_reg_750 ^ 1'd1);

assign xor_ln83_fu_2084_p2 = (phi_ln83_1_reg_762 ^ 1'd1);

assign zext_ln105_fu_2518_p1 = i19_0_reg_885;

assign zext_ln106_fu_2534_p1 = i19_0_reg_885;

assign zext_ln108_1_fu_2597_p1 = add_ln108_fu_2591_p2;

assign zext_ln108_2_fu_2568_p1 = shl_ln5_fu_2560_p3;

assign zext_ln108_3_fu_2578_p1 = shl_ln108_fu_2572_p2;

assign zext_ln108_4_fu_2587_p1 = add_ln108_1_fu_2582_p2;

assign zext_ln108_fu_2551_p1 = j20_0_reg_909;

assign zext_ln123_fu_2614_p1 = max_index_V_reg_942;

assign zext_ln32_1_fu_1039_p1 = tmp_fu_1032_p3;

assign zext_ln32_fu_1016_p1 = phi_ln32_1_reg_464;

assign zext_ln39_1_fu_1114_p1 = k_0_reg_523;

assign zext_ln39_fu_1110_p1 = tmp_7_fu_1102_p3;

assign zext_ln41_1_fu_1130_p1 = k_0_reg_523;

assign zext_ln41_2_fu_1139_p1 = add_ln41_1_fu_1134_p2;

assign zext_ln41_fu_1092_p1 = j_0_reg_511;

assign zext_ln43_fu_1144_p1 = di_0_reg_535;

assign zext_ln44_fu_1218_p1 = dj_0_reg_546;

assign zext_ln455_fu_2727_p1 = select_ln463_fu_2719_p3;

assign zext_ln45_1_fu_1174_p1 = shl_ln_fu_1166_p3;

assign zext_ln45_2_fu_1284_p1 = $unsigned(sext_ln45_2_fu_1280_p1);

assign zext_ln45_3_fu_1186_p1 = shl_ln45_1_fu_1178_p3;

assign zext_ln45_4_fu_1204_p1 = shl_ln45_2_fu_1196_p3;

assign zext_ln45_5_fu_1240_p1 = add_ln45_1_fu_1234_p2;

assign zext_ln45_fu_1253_p1 = $unsigned(sext_ln45_fu_1249_p1);

assign zext_ln463_fu_2703_p1 = select_ln469_fu_2695_p3;

assign zext_ln55_1_fu_1346_p1 = tmp_6_fu_1338_p3;

assign zext_ln55_2_fu_1366_p1 = phi_ln55_1_reg_569;

assign zext_ln55_fu_1334_p1 = tmp_5_fu_1326_p3;

assign zext_ln57_1_fu_2073_p1 = select_ln57_1_fu_2065_p3;

assign zext_ln57_fu_1315_p1 = select_ln57_fu_1307_p3;

assign zext_ln59_1_fu_1443_p1 = tmp_4_fu_1435_p3;

assign zext_ln59_2_fu_1473_p1 = j2_0_reg_603;

assign zext_ln59_3_fu_1510_p1 = k3_0_reg_614;

assign zext_ln59_4_fu_1514_p1 = k3_0_reg_614;

assign zext_ln59_5_fu_1523_p1 = add_ln59_1_fu_1518_p2;

assign zext_ln59_fu_1431_p1 = tmp_1_fu_1423_p3;

assign zext_ln60_fu_1528_p1 = di4_0_reg_625;

assign zext_ln61_fu_1559_p1 = dj5_0_reg_636;

assign zext_ln62_1_fu_1580_p1 = add_ln62_1_fu_1575_p2;

assign zext_ln62_2_fu_1597_p1 = tmp_14_fu_1589_p3;

assign zext_ln62_3_fu_1606_p1 = add_ln62_3_fu_1601_p2;

assign zext_ln67_fu_1760_p1 = tmp_12_fu_1750_p4;

assign zext_ln69_fu_1803_p1 = tmp_13_fu_1795_p3;

assign zext_ln70_fu_1836_p1 = k8_0_reg_706;

assign zext_ln71_1_fu_1852_p1 = k8_0_reg_706;

assign zext_ln71_2_fu_1856_p1 = k8_0_reg_706;

assign zext_ln71_3_fu_1865_p1 = add_ln71_1_fu_1860_p2;

assign zext_ln71_fu_1819_p1 = j7_0_reg_694;

assign zext_ln72_1_fu_1874_p1 = di9_0_reg_717;

assign zext_ln72_fu_1870_p1 = di9_0_reg_717;

assign zext_ln73_fu_1944_p1 = dj10_0_reg_728;

assign zext_ln75_1_fu_1916_p1 = tmp_20_fu_1908_p3;

assign zext_ln75_2_fu_1934_p1 = shl_ln2_fu_1926_p3;

assign zext_ln75_3_fu_1966_p1 = add_ln75_1_fu_1960_p2;

assign zext_ln75_4_fu_1983_p1 = dj10_0_reg_728;

assign zext_ln75_5_fu_2056_p1 = add_ln75_4_fu_2051_p2;

assign zext_ln75_6_fu_2016_p1 = dk_0_reg_739;

assign zext_ln75_7_fu_2025_p1 = add_ln75_6_fu_2020_p2;

assign zext_ln75_8_fu_2030_p1 = dk_0_reg_739;

assign zext_ln75_fu_1904_p1 = tmp_19_fu_1896_p3;

assign zext_ln83_fu_2106_p1 = tmp_17_fu_2096_p4;

assign zext_ln87_1_fu_2194_p1 = k13_0_reg_807;

assign zext_ln87_2_fu_2198_p1 = k13_0_reg_807;

assign zext_ln87_3_fu_2207_p1 = add_ln87_1_fu_2202_p2;

assign zext_ln87_fu_2159_p1 = j12_0_reg_796;

assign zext_ln90_1_fu_2255_p1 = tmp_27_fu_2246_p4;

assign zext_ln90_2_fu_2264_p1 = add_ln90_2_fu_2259_p2;

assign zext_ln90_fu_2137_p1 = tmp_21_fu_2129_p3;

assign zext_ln95_fu_2396_p1 = phi_ln95_reg_840;

assign zext_ln97_fu_2427_p1 = tmp_24_fu_2419_p3;

assign zext_ln99_1_fu_2484_p1 = k18_0_reg_874;

assign zext_ln99_2_fu_2493_p1 = add_ln99_3_fu_2488_p2;

assign zext_ln99_3_fu_2513_p1 = add_ln99_1_fu_2507_p3;

assign zext_ln99_fu_2443_p1 = j17_0_reg_863;

always @ (posedge ap_clk) begin
    zext_ln39_reg_2836[1:0] <= 2'b00;
    zext_ln39_reg_2836[12] <= 1'b0;
    zext_ln39_1_reg_2841[7:3] <= 5'b00000;
    sub_ln45_reg_2867[1:0] <= 2'b00;
    sext_ln55_reg_2920[0] <= 1'b0;
    sub_ln59_reg_2957[0] <= 1'b0;
    shl_ln1_reg_2962[1:0] <= 2'b00;
    tmp_17_cast_reg_2975[1:0] <= 2'b00;
    shl_ln62_1_reg_2980[1:0] <= 2'b00;
    zext_ln59_3_reg_2993[12:3] <= 10'b0000000000;
    mul_ln62_reg_3011[0] <= 1'b0;
    zext_ln69_reg_3061[1:0] <= 2'b00;
    zext_ln69_reg_3061[5] <= 1'b0;
    tmp_23_cast_reg_3074[2:0] <= 3'b000;
    zext_ln70_reg_3079[31:4] <= 28'b0000000000000000000000000000;
    zext_ln71_1_reg_3092[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    sub_ln75_1_reg_3110[0] <= 1'b0;
    tmp_30_cast_reg_3133[1:0] <= 2'b00;
    sext_ln74_reg_3138[1:0] <= 2'b00;
    zext_ln90_reg_3202[0] <= 1'b0;
    zext_ln90_reg_3202[3] <= 1'b0;
    shl_ln90_reg_3207[0] <= 1'b0;
    tmp_33_cast_reg_3220[2:0] <= 3'b000;
    shl_ln90_1_reg_3225[0] <= 1'b0;
    zext_ln87_1_reg_3238[7:4] <= 4'b0000;
    zext_ln97_reg_3290[0] <= 1'b0;
    zext_ln97_reg_3290[3] <= 1'b0;
    tmp_37_cast_reg_3303[2:0] <= 3'b000;
    shl_ln4_reg_3308[2:0] <= 3'b000;
    zext_ln105_reg_3336[6:4] <= 3'b000;
    zext_ln106_reg_3349[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //forward_pass
